// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace dhanman.money.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230907150753_BillStatus")]
    partial class BillStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            #region Role
            modelBuilder.Entity("dhanman.money.Domain.Authorization.Role", b =>
            {
                b.Property<string>("Name")
                    .HasMaxLength(50)
                    .HasColumnType("character varying(50)")
                    .HasColumnName("name");

                b.Property<string>("Description")
                    .HasMaxLength(200)
                    .HasColumnType("character varying(200)")
                    .HasColumnName("description");

                b.HasKey("Name")
                    .HasName("pk_roles");

                b.ToTable("roles", (string)null);
            });
            #endregion

            #region UserPaidModules

            modelBuilder.Entity("dhanman.money.Domain.Authorization.UserPaidModules", b =>
            {
                b.Property<Guid>("UserId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid")
                    .HasColumnName("user_id");

                b.Property<long>("PaidModules")
                    .HasColumnType("bigint")
                    .HasColumnName("paid_modules");

                b.HasKey("UserId")
                    .HasName("pk_user_roles");

                b.ToTable("user_roles", (string)null);
            });
            #endregion

            #region UserModule

            modelBuilder.Entity("dhanman.money.Domain.Authorization.UserRole", b =>
            {
                b.Property<Guid>("UserId")
                    .HasColumnType("uuid")
                    .HasColumnName("user_id");

                b.Property<string>("RoleName")
                    .HasColumnType("text")
                    .HasColumnName("role_name");

                b.HasKey("UserId", "RoleName")
                    .HasName("pk_user_paid_modules");

                b.ToTable("user_paid_modules", (string)null);
            });
            #endregion

            #region BillDetail

            modelBuilder.Entity("dhanman.money.Domain.Entities.BillDetails.BillDetail", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid")
                    .HasColumnName("id");

                b.Property<decimal>("Amount")
                    .HasColumnType("numeric")
                    .HasColumnName("amount");

                b.Property<Guid>("BillHeaderId")
                    .HasColumnType("uuid")
                    .HasColumnName("bill_header_id");

                b.Property<Guid>("CreatedBy")
                    .HasColumnType("uuid")
                    .HasColumnName("created_by");

                b.Property<DateTime>("CreatedOnUtc")
                    .HasColumnType("timestamp")
                    .HasColumnName("created_on_utc");

                b.Property<DateTime?>("DeletedOnUtc")
                    .HasColumnType("timestamp")
                    .HasColumnName("deleted_on_utc");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("description");

                b.Property<bool>("IsDeleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("boolean")
                    .HasDefaultValue(false)
                    .HasColumnName("is_deleted");

                b.Property<Guid?>("ModifiedBy")
                    .HasColumnType("uuid")
                    .HasColumnName("modified_by");

                b.Property<DateTime?>("ModifiedOnUtc")
                    .HasColumnType("timestamp")
                    .HasColumnName("modified_on_utc");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("name");

                b.Property<decimal>("Price")
                    .HasColumnType("numeric")
                    .HasColumnName("price");

                b.Property<int>("Quantity")
                    .HasColumnType("integer")
                    .HasColumnName("quantity");

                b.HasKey("Id")
                    .HasName("pk_bill_details");

                b.ToTable("bill_details", (string)null);
            });
            #endregion

            #region BillHeader

            modelBuilder.Entity("dhanman.money.Domain.Entities.BillHeaders.BillHeader", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid")
                    .HasColumnName("id");

                b.Property<DateTime>("BillDate")
                    .HasColumnType("timestamp without time zone")
                    .HasColumnName("bill_date");

                b.Property<string>("BillNumber")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("bill_number");

                b.Property<Guid>("BillPaymentId")
                    .HasColumnType("uuid")
                    .HasColumnName("bill_payment_id");

                b.Property<Guid>("BillStatusId")
                    .HasColumnType("uuid")
                    .HasColumnName("bill_status_id");

                b.Property<Guid>("ClientId")
                    .HasColumnType("uuid")
                    .HasColumnName("client_id");

                b.Property<Guid>("CoaId")
                    .HasColumnType("uuid")
                    .HasColumnName("coa_id");

                b.Property<DateTime>("CreatedOnUtc")
                    .HasColumnType("timestamp")
                    .HasColumnName("created_on_utc");

                b.Property<string>("Currency")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("currency");

                b.Property<DateTime?>("DeletedOnUtc")
                    .HasColumnType("timestamp")
                    .HasColumnName("deleted_on_utc");

                b.Property<decimal>("Discount")
                    .HasColumnType("numeric")
                    .HasColumnName("discount");

                b.Property<DateTime>("DueDate")
                    .HasColumnType("timestamp without time zone")
                    .HasColumnName("due_date");

                b.Property<bool>("IsDeleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("boolean")
                    .HasDefaultValue(false)
                    .HasColumnName("is_deleted");

                b.Property<DateTime?>("ModifiedOnUtc")
                    .HasColumnType("timestamp")
                    .HasColumnName("modified_on_utc");

                b.Property<string>("Note")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("note");

                b.Property<int?>("PaymentTerm")
                    .HasColumnType("integer")
                    .HasColumnName("payment_term");

                b.Property<decimal>("Tax")
                    .HasColumnType("numeric")
                    .HasColumnName("tax");

                b.Property<decimal>("TotalAmount")
                    .HasColumnType("numeric")
                    .HasColumnName("total_amount");

                b.Property<Guid>("UserId")
                    .HasColumnType("uuid")
                    .HasColumnName("user_id");

                b.Property<Guid>("VendorId")
                    .HasColumnType("uuid")
                    .HasColumnName("vendor_id");

                b.HasKey("Id")
                    .HasName("pk_bill_headers");

                b.ToTable("bill_headers", (string)null);
            });

            #endregion

            #region BillStatus

            modelBuilder.Entity("dhanman.money.Domain.Entities.BillStatuses.BillStatus", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid")
                    .HasColumnName("id");

                b.Property<Guid>("CreatedBy")
                    .HasColumnType("uuid")
                    .HasColumnName("created_by");

                b.Property<DateTime>("CreatedOnUtc")
                    .HasColumnType("timestamp")
                    .HasColumnName("created_on_utc");

                b.Property<DateTime?>("DeletedOnUtc")
                    .HasColumnType("timestamp")
                    .HasColumnName("deleted_on_utc");

                b.Property<bool>("IsDeleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("boolean")
                    .HasDefaultValue(false)
                    .HasColumnName("is_deleted");

                b.Property<Guid?>("ModifiedBy")
                    .HasColumnType("uuid")
                    .HasColumnName("modified_by");

                b.Property<DateTime?>("ModifiedOnUtc")
                    .HasColumnType("timestamp")
                    .HasColumnName("modified_on_utc");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("character varying(100)")
                    .HasColumnName("name");

                b.HasKey("Id")
                    .HasName("pk_bill_statuses");

                b.ToTable("bill_statuses", (string)null);
            });

            #endregion

            #region User

            modelBuilder.Entity("dhanman.money.Domain.Entities.Users.User", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid")
                    .HasColumnName("id");

                b.Property<Guid>("CreatedBy")
                    .HasColumnType("uuid")
                    .HasColumnName("created_by");

                b.Property<DateTime>("CreatedOnUtc")
                    .HasColumnType("timestamp")
                    .HasColumnName("created_on_utc");

                b.Property<DateTime?>("DeletedOnUtc")
                    .HasColumnType("timestamp")
                    .HasColumnName("deleted_on_utc");

                b.Property<bool>("IsDeleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("boolean")
                    .HasDefaultValue(false)
                    .HasColumnName("is_deleted");

                b.Property<Guid?>("ModifiedBy")
                    .HasColumnType("uuid")
                    .HasColumnName("modified_by");

                b.Property<DateTime?>("ModifiedOnUtc")
                    .HasColumnType("timestamp")
                    .HasColumnName("modified_on_utc");

                b.Property<string>("_passwordHash")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("password_hash");

                b.HasKey("Id")
                    .HasName("pk_users");

                b.ToTable("users", (string)null);
            });
            #endregion

            #region Vendor
            modelBuilder.Entity("dhanman.money.Domain.Entities.Vendor", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid")
                    .HasColumnName("id");

                b.Property<Guid>("ClientId")
                    .HasColumnType("uuid")
                    .HasColumnName("client_id");

                b.Property<Guid>("CreatedBy")
                    .HasColumnType("uuid")
                    .HasColumnName("created_by");

                b.Property<DateTime>("CreatedOnUtc")
                    .HasColumnType("timestamp")
                    .HasColumnName("created_on_utc");

                b.Property<DateTime?>("DeletedOnUtc")
                    .HasColumnType("timestamp")
                    .HasColumnName("deleted_on_utc");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasMaxLength(256)
                    .HasColumnType("character varying(256)")
                    .HasColumnName("email");

                b.Property<string>("FirstName")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("character varying(100)")
                    .HasColumnName("first_name");

                b.Property<bool>("IsDeleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("boolean")
                    .HasDefaultValue(false)
                    .HasColumnName("is_deleted");

                b.Property<string>("LastName")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("character varying(100)")
                    .HasColumnName("last_name");

                b.Property<Guid?>("ModifiedBy")
                    .HasColumnType("uuid")
                    .HasColumnName("modified_by");

                b.Property<DateTime?>("ModifiedOnUtc")
                    .HasColumnType("timestamp")
                    .HasColumnName("modified_on_utc");

                b.HasKey("Id")
                    .HasName("pk_vendors");

                b.ToTable("vendors", (string)null);
            });

            #endregion

            #region Users.User
            modelBuilder.Entity("dhanman.money.Domain.Entities.Users.User", b =>
            {
                b.OwnsOne("dhanman.money.Domain.Entities.Users.Vendors.Email", "Email", b1 =>
                {
                    b1.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b1.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("email");

                    b1.HasKey("UserId");

                    b1.ToTable("users");

                    b1.WithOwner()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_users_users_id");
                });

                b.OwnsOne("dhanman.money.Domain.Entities.Users.Vendors.FirstName", "FirstName", b1 =>
                {
                    b1.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b1.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("first_name");

                    b1.HasKey("UserId");

                    b1.ToTable("users");

                    b1.WithOwner()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_users_users_id");
                });

                b.OwnsOne("dhanman.money.Domain.Entities.Users.Vendors.LastName", "LastName", b1 =>
                {
                    b1.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b1.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("last_name");

                    b1.HasKey("UserId");

                    b1.ToTable("users");

                    b1.WithOwner()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_users_users_id");
                });

                b.Navigation("Email")
                    .IsRequired();

                b.Navigation("FirstName")
                    .IsRequired();

                b.Navigation("LastName")
                    .IsRequired();
            });

            #endregion


#pragma warning restore 612, 618
        }
    }
}
